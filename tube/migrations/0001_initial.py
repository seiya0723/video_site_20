# Generated by Django 3.2.7 on 2021-09-17 10:42

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvertisingCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10, verbose_name='広告カテゴリー名')),
            ],
            options={
                'db_table': 'advertising_category',
            },
        ),
        migrations.CreateModel(
            name='AdvertisingVideo',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='投稿日')),
                ('title', models.CharField(max_length=50, verbose_name='タイトル')),
                ('description', models.CharField(max_length=500, verbose_name='動画説明文')),
                ('movie', models.FileField(blank=True, upload_to='tube/movie', verbose_name='動画')),
                ('thumbnail', models.ImageField(null=True, upload_to='tube/thumbnail/', verbose_name='サムネイル')),
                ('views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='再生回数')),
            ],
            options={
                'db_table': 'advertising_video',
            },
        ),
        migrations.CreateModel(
            name='GoodTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='評価日時')),
            ],
            options={
                'db_table': 'good_topic',
            },
        ),
        migrations.CreateModel(
            name='GoodVideo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='評価日時')),
            ],
            options={
                'db_table': 'good_video',
            },
        ),
        migrations.CreateModel(
            name='Notify',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='通知作成日時')),
                ('title', models.CharField(max_length=200, null=True, verbose_name='通知タイトル')),
                ('content', models.CharField(max_length=2000, verbose_name='通知内容')),
            ],
            options={
                'db_table': 'notify',
            },
        ),
        migrations.CreateModel(
            name='NotifyCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10, verbose_name='通知カテゴリ名')),
            ],
            options={
                'db_table': 'notify_category',
            },
        ),
        migrations.CreateModel(
            name='ReportCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10, verbose_name='通報カテゴリ名')),
            ],
            options={
                'db_table': 'report_category',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='投稿日')),
                ('title', models.CharField(max_length=50, verbose_name='タイトル')),
                ('description', models.CharField(max_length=500, verbose_name='動画説明文')),
                ('movie', models.FileField(blank=True, upload_to='tube/movie', verbose_name='動画')),
                ('thumbnail', models.ImageField(null=True, upload_to='tube/thumbnail/', verbose_name='サムネイル')),
                ('edited', models.BooleanField(default=False)),
                ('views', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='再生回数')),
                ('private', models.BooleanField(default=False, verbose_name='限定公開')),
                ('comment_refuse', models.BooleanField(default=False, verbose_name='コメント拒否')),
                ('comment_approval', models.BooleanField(default=False, verbose_name='コメント承認制')),
            ],
            options={
                'db_table': 'video',
            },
        ),
        migrations.CreateModel(
            name='VideoCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10, verbose_name='カテゴリー名')),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='VideoComment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=500, verbose_name='コメント文')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='投稿日')),
                ('video_comment_approval', models.BooleanField(default=False, verbose_name='動画コメント承認')),
                ('read', models.BooleanField(default=False, verbose_name='既読')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='コメント先の動画')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='投稿者')),
            ],
            options={
                'db_table': 'video_comment',
            },
        ),
        migrations.CreateModel(
            name='VideoCommentReply',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=500, verbose_name='リプライ')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='投稿日')),
                ('comment_reply_approval', models.BooleanField(default=False, verbose_name='コメントリプライ承認')),
                ('read', models.BooleanField(default=False, verbose_name='既読')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.videocomment', verbose_name='リプライ対象のコメント')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='投稿者')),
            ],
            options={
                'db_table': 'video_comment_reply',
            },
        ),
        migrations.CreateModel(
            name='WeeklyRank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='実行日')),
                ('score', models.IntegerField(verbose_name='ランキングスコア')),
                ('rank', models.IntegerField(verbose_name='順位')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tube.videocategory', verbose_name='集計時点でのランキング部門(nullは総合部門)')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='対象動画')),
            ],
            options={
                'db_table': 'weekly_rank',
            },
        ),
        migrations.CreateModel(
            name='VideoView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='再生日')),
                ('ip', models.GenericIPAddressField(verbose_name='再生した人のIPアドレス')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='再生する動画')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='再生した人')),
            ],
            options={
                'db_table': 'video_view',
                'unique_together': {('target', 'date', 'user'), ('target', 'date', 'ip')},
            },
        ),
        migrations.CreateModel(
            name='VideoCommentReplyToReply',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.CharField(max_length=500, verbose_name='動画コメントのリプライに対するリプライ')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='投稿日')),
                ('reply_to_reply_approval', models.BooleanField(default=False, verbose_name='リプライのリプライ承認')),
                ('read', models.BooleanField(default=False, verbose_name='既読')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.videocommentreply', verbose_name='リプライ対象のコメント')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='投稿者')),
            ],
            options={
                'db_table': 'video_comment_reply_to_reply',
            },
        ),
        migrations.CreateModel(
            name='VideoCommentRefuse',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_comment_refuse', models.BooleanField(default=False, verbose_name='動画コメント全拒否')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='動画投稿者')),
            ],
            options={
                'db_table': 'config',
            },
        ),
        migrations.CreateModel(
            name='VideoCommentApproval',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video_comment_approval', models.BooleanField(default=False, verbose_name='全動画コメント承認制')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='動画投稿者')),
            ],
            options={
                'db_table': 'config_approval',
            },
        ),
        migrations.AddField(
            model_name='video',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='video', to='tube.videocategory', verbose_name='カテゴリ'),
        ),
        migrations.AddField(
            model_name='video',
            name='good',
            field=models.ManyToManyField(related_name='posted_good', through='tube.GoodVideo', to=settings.AUTH_USER_MODEL, verbose_name='良いね'),
        ),
        migrations.AddField(
            model_name='video',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted_user', to=settings.AUTH_USER_MODEL, verbose_name='投稿者'),
        ),
        migrations.AddField(
            model_name='video',
            name='view',
            field=models.ManyToManyField(related_name='video_view', through='tube.VideoView', to=settings.AUTH_USER_MODEL, verbose_name='再生'),
        ),
        migrations.CreateModel(
            name='UserPolicy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='利用規約同意日時')),
                ('accept', models.BooleanField(default=False, verbose_name='同意')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ユーザー')),
            ],
            options={
                'db_table': 'userpolicy',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='投稿日')),
                ('content', models.CharField(max_length=200, verbose_name='投稿内容')),
                ('read', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='閲覧数')),
                ('good', models.ManyToManyField(related_name='good_topic', through='tube.GoodTopic', to=settings.AUTH_USER_MODEL, verbose_name='良いね')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topic_user', to=settings.AUTH_USER_MODEL, verbose_name='トピック投稿者')),
            ],
            options={
                'db_table': 'topic',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='通報日時')),
                ('reason', models.CharField(max_length=200, verbose_name='通報理由')),
                ('target', models.CharField(max_length=500, verbose_name='通報対象')),
                ('target_id', models.CharField(max_length=100, verbose_name='通報対象id')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='tube.reportcategory', verbose_name='通報カテゴリ')),
                ('report_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_user', to=settings.AUTH_USER_MODEL, verbose_name='通報したユーザー')),
                ('reported_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_user', to=settings.AUTH_USER_MODEL, verbose_name='通報されたユーザー')),
            ],
            options={
                'db_table': 'report',
            },
        ),
        migrations.CreateModel(
            name='NotifyTarget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='通知日時')),
                ('read', models.BooleanField(default=False, verbose_name='既読')),
                ('notify', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.notify', verbose_name='通知')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='通知対象')),
            ],
            options={
                'db_table': 'notify_target',
                'unique_together': {('user', 'notify')},
            },
        ),
        migrations.AddField(
            model_name='notify',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tube.notifycategory', verbose_name='通知カテゴリ'),
        ),
        migrations.AddField(
            model_name='notify',
            name='target',
            field=models.ManyToManyField(through='tube.NotifyTarget', to=settings.AUTH_USER_MODEL, verbose_name='通知対象のユーザー'),
        ),
        migrations.CreateModel(
            name='MyList',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='登録日時')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='マイリスト動画')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='登録したユーザー')),
            ],
            options={
                'db_table': 'mylist',
            },
        ),
        migrations.CreateModel(
            name='MonthlyRank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='実行日')),
                ('score', models.IntegerField(verbose_name='ランキングスコア')),
                ('rank', models.IntegerField(verbose_name='順位')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tube.videocategory', verbose_name='集計時点でのランキング部門(nullは総合部門)')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='対象動画')),
            ],
            options={
                'db_table': 'monthly_rank',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='視聴日時')),
                ('views', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='視聴回数')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='視聴した動画')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='視聴したユーザー')),
            ],
            options={
                'db_table': 'history',
            },
        ),
        migrations.AddField(
            model_name='goodvideo',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='対象動画'),
        ),
        migrations.AddField(
            model_name='goodvideo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='高評価したユーザー'),
        ),
        migrations.AddField(
            model_name='goodtopic',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.topic', verbose_name='対象掲示板'),
        ),
        migrations.AddField(
            model_name='goodtopic',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='高評価したユーザー'),
        ),
        migrations.CreateModel(
            name='GoodAdvertisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='評価日時')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.advertisingvideo', verbose_name='対象広告動画')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='高評価したユーザー')),
            ],
            options={
                'db_table': 'good_advertisement',
            },
        ),
        migrations.CreateModel(
            name='DailyRank',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='実行日')),
                ('score', models.IntegerField(verbose_name='ランキングスコア')),
                ('rank', models.IntegerField(verbose_name='順位')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tube.videocategory', verbose_name='集計時点でのランキング部門(nullは総合部門)')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='対象動画')),
            ],
            options={
                'db_table': 'daily_rank',
            },
        ),
        migrations.CreateModel(
            name='BadAdvertisement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dt', models.DateTimeField(default=django.utils.timezone.now, verbose_name='評価日時')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.advertisingvideo', verbose_name='対象広告動画')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Bad評価したユーザー')),
            ],
            options={
                'db_table': 'bad_advertisement',
            },
        ),
        migrations.CreateModel(
            name='AdvertisingVideoView',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='再生日')),
                ('ip', models.GenericIPAddressField(verbose_name='再生した人のIPアドレス')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.advertisingvideo', verbose_name='再生する広告動画')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='再生した人')),
            ],
            options={
                'db_table': 'advertising_video_view',
                'unique_together': {('target', 'date', 'user'), ('target', 'date', 'ip')},
            },
        ),
        migrations.AddField(
            model_name='advertisingvideo',
            name='bad',
            field=models.ManyToManyField(related_name='bad_advertisement', through='tube.BadAdvertisement', to=settings.AUTH_USER_MODEL, verbose_name='悪いね'),
        ),
        migrations.AddField(
            model_name='advertisingvideo',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='advertising_video', to='tube.advertisingcategory', verbose_name='カテゴリ'),
        ),
        migrations.AddField(
            model_name='advertisingvideo',
            name='good',
            field=models.ManyToManyField(related_name='good_advertisement', through='tube.GoodAdvertisement', to=settings.AUTH_USER_MODEL, verbose_name='良いね'),
        ),
        migrations.AddField(
            model_name='advertisingvideo',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='advertiser', to=settings.AUTH_USER_MODEL, verbose_name='投稿者'),
        ),
        migrations.AddField(
            model_name='advertisingvideo',
            name='view',
            field=models.ManyToManyField(related_name='advertising_video_view', through='tube.AdvertisingVideoView', to=settings.AUTH_USER_MODEL, verbose_name='再生'),
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='実行日')),
                ('play', models.IntegerField(verbose_name='再生点')),
                ('mylist', models.IntegerField(verbose_name='マイリスト点')),
                ('good', models.IntegerField(verbose_name='良いね点')),
                ('comment', models.IntegerField(verbose_name='コメント点')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tube.videocategory', verbose_name='実行時の動画カテゴリ')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tube.video', verbose_name='対象動画')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='実行したユーザー')),
            ],
            options={
                'db_table': 'activity',
            },
        ),
    ]
